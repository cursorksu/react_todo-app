{"version":3,"sources":["components/SelectAll/SelectAll.js","components/Header/Header.js","components/EditField/EditField.js","components/TodoList/TodoList.js","components/Footer/Footer.js","App.js","index.js"],"names":["SelectAll","state","isChecked","handleChange","event","checked","target","setState","props","selectAll","this","value","onChange","type","id","className","htmlFor","Component","Header","inputValue","handleBlur","setNewTodo","action","onSubmit","onBlur","placeholder","PureComponent","EditField","editingValue","escFunction","keyCode","handleEditSubmit","handleEditorChange","e","preventDefault","onClose","document","addEventListener","removeEventListener","TodoList","editingField","editing","handleEdit","editingId","editingLabel","handleEdited","setEditedValue","data","onCompleted","onDestroy","map","label","completed","key","cx","onClick","handleClick","name","Footer","sorterName","sort","length","clear","href","selected","todos","v4","substr","App","todoList","isSorted","sortedTodos","createTodo","todo","createdTodo","trim","prevState","handleCompleted","isComplete","todoId","changedItem","find","slice","indexOf","handleDestroy","deletingItem","idx","handleSelectAll","isSelectAll","list","clearCompleted","newTodos","filter","handleSort","localStorage","getItem","JSON","parse","setItem","stringify","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bbbd5b4c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './SelectAll.css';\n\nexport class SelectAll extends Component {\n  state = {\n    isChecked: false,\n  };\n\nhandleChange = (event) => {\n  const { checked } = event.target;\n\n  this.setState({\n    isChecked: checked,\n  });\n  this.props.selectAll(checked);\n};\n\nrender() {\n  const { isChecked } = this.state;\n\n  return (\n    <>\n      <input\n        value={this.state.checked}\n        onChange={this.handleChange}\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n      />\n      <label htmlFor=\"toggle-all\">\n        { isChecked\n          ? <span className=\"tooltip\">Mark all as not complete</span>\n          : <span className=\"tooltip\">Mark all as complete</span>\n        }\n      </label>\n    </>\n  );\n}\n}\n\nSelectAll.propTypes = {\n  selectAll: PropTypes.func.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { SelectAll } from '../SelectAll';\nimport './Header.css';\n\nexport class Header extends PureComponent {\n  state = {\n    inputValue: '',\n  };\n\nhandleChange = (event) => {\n  const { value } = event.target;\n\n  this.setState({\n    inputValue: value,\n  });\n};\n\nhandleBlur = () => {\n  this.props.setNewTodo(this.state.inputValue);\n\n  this.setState({\n    inputValue: '',\n  });\n};\n\nrender() {\n  const { inputValue } = this.state;\n  const { selectAll } = this.props;\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n      <form action=\"#\" onSubmit={this.handleBlur}>\n        <input\n          value={inputValue}\n          onBlur={this.handleBlur}\n          onChange={this.handleChange}\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n        />\n        <SelectAll selectAll={selectAll} />\n      </form>\n    </header>\n  );\n}\n}\n\nHeader.propTypes = {\n  setNewTodo: PropTypes.func.isRequired,\n  selectAll: PropTypes.func.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './EditField.css';\n\nexport class EditField extends PureComponent {\n  state = {\n    editingValue: this.props.value,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.escFunction, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.escFunction, false);\n  }\n\n  escFunction = (event) => {\n    if (event.keyCode === 27) {\n      this.handleEditSubmit(event);\n    }\n  };\n\n  handleEditorChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      editingValue: value,\n    });\n  };\n\n  handleEditSubmit = (e) => {\n    if (e.type === 'blur' || e.type === 'submit') {\n      e.preventDefault();\n    }\n\n    const { editingValue } = this.state;\n\n    this.props.onClose(editingValue);\n  };\n\n  render() {\n    const { editingValue } = this.state;\n\n    return (\n      <form action=\"#\" onSubmit={this.handleEditSubmit} className=\"edit-form\">\n        <input\n          type=\"text\"\n          value={editingValue}\n          onBlur={this.handleEditSubmit}\n          onChange={this.handleEditorChange}\n          className=\"edit\"\n        />\n      </form>\n    );\n  }\n}\n\nEditField.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport * as cx from 'classnames';\nimport { EditField } from '../EditField';\nimport './TodoList.css';\n\nexport class TodoList extends PureComponent {\n  state = {\n    editingValue: '',\n    editingField: null,\n    editing: false,\n  };\n\n  handleEdit = (event, editingId, editingLabel) => {\n    this.setState({\n      editingValue: editingLabel,\n      editingField: editingId,\n      editing: true,\n    });\n  };\n\n  handleEdited = (value) => {\n    this.setState({\n      editingValue: value,\n      editing: false,\n    });\n\n    this.props.setEditedValue(this.state.editingValue, this.state.editingField);\n  };\n\n  render() {\n    const { editing, editingField, editingValue } = this.state;\n    const { data, onCompleted, onDestroy } = this.props;\n\n    return (\n      <ul className=\"todo-list\">\n        {data.map(({ label, id, completed }) => (\n          <li\n            key={id}\n            className={cx(``, {\n              completed,\n              editing: editing && editingField === id,\n            })}\n          >\n            <form action=\"#\" className=\"view\">\n              <input\n                onClick={this.handleClick}\n                checked={completed}\n                onChange={onCompleted}\n                type=\"checkbox\"\n                className=\"toggle\"\n                id={id}\n              />\n              <label\n                className=\"custom-cursor\"\n                htmlFor={id}\n              >\n                <span className=\"tooltip input-tooltip\">\n                  <button\n                    type=\"button\"\n                    onClick={event => this.handleEdit(event, id, label)}\n                    className=\"button-tooltip\"\n                  >\n                    Click for edit\n                  </button>\n                </span>\n                {label}\n              </label>\n              <button\n                name={id}\n                type=\"button\"\n                className=\"destroy\"\n                onClick={onDestroy}\n              />\n            </form>\n            {(editingField === id)\n            && (\n              <EditField\n                value={editingValue}\n                onClose={value => this.handleEdited(value)}\n              />\n            )\n            }\n          </li>\n        ))\n        }\n      </ul>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape).isRequired,\n  setEditedValue: PropTypes.func.isRequired,\n  onCompleted: PropTypes.func.isRequired,\n  onDestroy: PropTypes.func.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport * as cx from 'classnames';\nimport './Footer.css';\n\nexport class Footer extends PureComponent {\n  state = {\n    sorterName: 'all',\n  };\n\n  handleClick =(event) => {\n    const sorterName = event.target.name;\n\n    event.preventDefault();\n\n    const { sort } = this.props;\n\n    sort(sorterName);\n    this.setState({\n      sorterName,\n    });\n  };\n\n  render() {\n    const { length, clear } = this.props;\n    const { sorterName } = this.state;\n\n    return (\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {`${length} items left`}\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a\n              href=\"#/\"\n              name=\"all\"\n              className={cx('', { selected: sorterName === 'all' })}\n              onClick={this.handleClick}\n            >\n              All\n            </a>\n          </li>\n\n          <li>\n            <a\n              href=\"#/active\"\n              name=\"active\"\n              className={cx('', { selected: sorterName === 'active' })}\n              onClick={this.handleClick}\n            >\n              Active\n            </a>\n          </li>\n\n          <li>\n            <a\n              href=\"#/completed\"\n              name=\"completed\"\n              className={cx('', { selected: sorterName === 'completed' })}\n              onClick={e => this.handleClick(e)}\n            >\n              Completed\n            </a>\n          </li>\n        </ul>\n\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={clear}\n        >\n          Clear completed\n        </button>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  sort: PropTypes.func.isRequired,\n  clear: PropTypes.func.isRequired,\n  length: PropTypes.number.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport { v4 } from 'uuid';\nimport { Header } from './components/Header';\nimport { TodoList } from './components/TodoList';\nimport { Footer } from './components/Footer';\n\nconst todos = [\n  {\n    id: v4().substr(0, 4),\n    label: 'drink a coffee',\n    completed: false,\n  },\n  {\n    id: v4().substr(0, 4),\n    label: 'get the world masters',\n    completed: false,\n  },\n  {\n    id: v4().substr(0, 4),\n    label: 'find myself',\n    completed: false,\n  },\n  {\n    id: v4().substr(0, 4),\n    label: 'make somebody happy',\n    completed: false,\n  },\n];\n\nexport class App extends PureComponent {\n  state = {\n    todoList: todos,\n    isSorted: false,\n    sortedTodos: [],\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem('todos')) {\n      this.setState(prevState => ({\n        todoList: [\n          ...JSON.parse(localStorage.getItem('todos')),\n        ],\n      }));\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('todos', JSON.stringify(this.state.todoList));\n  }\n\n  createTodo = todo => ({\n    id: v4().substr(0, 4),\n    label: todo,\n    completed: false,\n  });\n\n  setNewTodo = (todo) => {\n    const createdTodo = this.createTodo(todo);\n\n    if (createdTodo.label.trim()) {\n      this.setState(prevState => ({\n        todoList: [\n          ...prevState.todoList,\n          createdTodo,\n        ],\n      }));\n    }\n  };\n\n  handleCompleted = (event) => {\n    const { todoList } = this.state;\n    const isComplete = event.target.checked;\n    const todoId = event.target.id;\n\n    const changedItem = todoList\n      .find(todo => todo.id === todoId);\n\n    changedItem.completed = isComplete;\n\n    this.setState(prevState => ({\n      todoList: [\n        ...prevState.todoList\n          .slice(0, todoList.indexOf(changedItem)),\n        changedItem,\n        ...prevState.todoList\n          .slice(todoList.indexOf(changedItem) + 1),\n      ],\n    }));\n  };\n\n  handleDestroy = (event) => {\n    const { todoList } = this.state;\n    const { name } = event.target;\n\n    const deletingItem = todoList\n      .find(todo => todo.id === name);\n\n    this.setState(prevState => ({\n      todoList: [\n        ...prevState.todoList\n          .slice(0, todoList.indexOf(deletingItem)),\n        ...prevState.todoList\n          .slice(todoList.indexOf(deletingItem) + 1),\n      ],\n    }));\n  };\n\n  setEditedValue = (value, idx) => {\n    const { todoList } = this.state;\n\n    const changedItem = todoList\n      .find(todo => todo.id === idx);\n\n    if (value.trim()) {\n      changedItem.label = value;\n      changedItem.completed = false;\n\n      this.setState(prevState => ({\n        todoList: [\n          ...prevState.todoList\n            .slice(0, todoList.indexOf(changedItem)),\n          changedItem,\n          ...prevState.todoList\n            .slice(todoList.indexOf(changedItem) + 1),\n        ],\n      }));\n    }\n  };\n\n  handleSelectAll = (isSelectAll) => {\n    const allTodosCompleted = list => (list\n      .map(todo => ({\n        ...todo,\n        completed: isSelectAll,\n      })));\n\n    this.setState(prevState => ({\n      todoList: allTodosCompleted(prevState.todoList),\n    }));\n  };\n\n  clearCompleted = () => {\n    const { todoList } = this.state;\n\n    const newTodos = todoList.filter(todo => !todo.completed);\n\n    this.setState({\n      todoList: newTodos,\n    });\n  };\n\n  handleSort = (name) => {\n    this.setState((prevState) => {\n      if (name === 'active') {\n        return {\n          isSorted: true,\n          sortedTodos: prevState.todoList\n            .filter(todo => !todo.completed),\n        };\n      }\n\n      if (name === 'completed') {\n        return {\n          isSorted: true,\n          sortedTodos: prevState.todoList\n            .filter(todo => todo.completed),\n        };\n      }\n\n      return {\n        isSorted: false,\n        todoList: prevState.todoList,\n        sortedTodos: [],\n      };\n    });\n  };\n\n  render() {\n    const { todoList, isSorted, sortedTodos } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <Header\n          setNewTodo={todo => this.setNewTodo(todo)}\n          selectAll={checked => this.handleSelectAll(checked)}\n        />\n\n        <section className=\"main\">\n          <TodoList\n            setEditedValue={(value, id) => this.setEditedValue(value, id)}\n            data={isSorted ? sortedTodos : todoList}\n            onCompleted={event => this.handleCompleted(event)}\n            onDestroy={event => this.handleDestroy(event)}\n          />\n        </section>\n\n        <Footer\n          clear={this.clearCompleted}\n          length={isSorted\n            ? sortedTodos.length\n            : todoList.length\n          }\n          sort={name => this.handleSort(name)}\n        />\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}